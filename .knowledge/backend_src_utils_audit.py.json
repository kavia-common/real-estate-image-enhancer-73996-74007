{"is_source_file": true, "format": "Python", "description": "This file defines an asynchronous function to log audit events into a database using SQLAlchemy ORM. It imports the Session class and the AuditLog model, and provides a utility for recording user actions along with optional metadata such as IP address and user agent.", "external_files": ["src/models/audit_log"], "external_methods": [], "published": [], "classes": [], "methods": [{"name": "log_audit_event(db: Session, user_id: int, action: str, details: dict, ip_address: str = None, user_agent: str = None)", "description": "Asynchronous function to create and store an audit log entry in the database.", "scope": "", "scopeKind": ""}], "calls": ["db.add", "db.commit"], "search-terms": ["audit", "log", "audit_log", "log_audit_event", "async", "SQLAlchemy", "audit_log"], "state": 2, "file_id": 16, "knowledge_revision": 33, "git_revision": "", "ctags": [{"_type": "tag", "name": "log_audit_event", "path": "/home/kavia/workspace/code-generation/real-estate-image-enhancer-73996-74007/backend/src/utils/audit.py", "pattern": "/^async def log_audit_event(db: Session, user_id: int, action: str, details: dict, ip_address: str/", "language": "Python", "kind": "function", "signature": "(db: Session, user_id: int, action: str, details: dict, ip_address: str = None, user_agent: str = None)"}], "hash": "a3933700be8f19b57ab82ff06a987e2f", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/utils/audit.py", "revision_history": [{"33": ""}]}